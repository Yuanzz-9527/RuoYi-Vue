<template>
  <div class="${businessName}-page art-full-height">
    <!-- 搜索栏 -->
    <ArtSearchBar
      v-model:filter="formFilters"
      :items="formItems"
      @reset="handleReset"
      @search="handleSearch"
    />

    <ElCard class="art-table-card" shadow="never">
      <!-- 表格头部 -->
      <ArtTableHeader
        :showZebra="false"
        v-model:columns="columnChecks"
        @refresh="handleRefresh"
      >
        <template #left>
          <ElButton v-auth="'${moduleName}:${businessName}:add'" plain type="primary" @click="handleAdd()" v-ripple>
            添加${functionName}
          </ElButton>
          <ElButton @click="toggleExpand" plain type="info" v-ripple>
            {{ isExpanded ? '收起' : '展开' }}
          </ElButton>
        </template>
      </ArtTableHeader>

      <ArtTable
        ref="tableRef"
        rowKey="${pkColumn.javaField}"
        :loading="loading"
        :columns="columns"
        :data="tableData"
        :stripe="false"
      >
 #foreach($column in $columns)
         #set($javaField=$column.javaField)
         #set($parentheseIndex=$column.columnComment.indexOf("（"))
         #if($parentheseIndex != -1)
         #set($comment=$column.columnComment.substring(0, $parentheseIndex))
         #else
         #set($comment=$column.columnComment)
         #end
         #if($column.pk)
         #elseif($column.list && $column.htmlType == "datetime")
         <template #${javaField}="{ value }">
           <span>{{ parseTime(value, '{y}-{m}-{d}') }}</span>
         </template>
         #elseif($column.list && $column.htmlType == "imageUpload")
         <template #${javaField}="{ value }">
           <ElImage
             style="width: 50px; height: 50px"
             :src="value"
             :zoom-rate="1.2"
             :max-scale="7"
             :min-scale="0.2"
             :preview-src-list="[value]"
             show-progress
             fit="cover"
           />
         </template>
         #elseif($column.list && "" != $column.dictType && ${dicts} != '')
         <template #${javaField}="{ value }">
           #if($column.htmlType == "checkbox")
           <ArtDict :options="dict.${column.dictType}" :value="value ? value.split(',') : []"></ArtDict>
           #else
           <ArtDict :options="dict.${column.dictType}" :value="value"></ArtDict>
           #end
         </template>
         #elseif($column.list && "" != $javaField)
         #end
         #end
      </ArtTable>

      <!-- 弹窗表单 -->
      <ElDialog :title="dialogTitle" v-model="dialogVisible" width="700px" align-center>
        <ElForm ref="formRef" :model="form" :rules="rules" label-width="85px">
          <ElRow :gutter="20">
          #foreach($column in $columns)
          #set($field=$column.javaField)
          #if($column.insert && !$column.pk)
          #if(($column.usableColumn) || (!$column.superColumn))
          #set($parentheseIndex=$column.columnComment.indexOf("（"))
          #if($parentheseIndex != -1)
          #set($comment=$column.columnComment.substring(0, $parentheseIndex))
          #else
          #set($comment=$column.columnComment)
          #end
          #set($dictType=$column.dictType)
          #if("" != $treeParentCode && $column.javaField == $treeParentCode)
            <ElCol :span="24">
                <ElFormItem label="${comment}" prop="${field}">
                    <ElTreeSelect
                      v-model="form.${treeParentCode}"
                      :data="${businessName}Options"
                      check-strictly
                      node-key="${treeCode}"
                      :props="{ value: '${treeCode}', label: '${treeName}', children: 'children' }"
                      placeholder="请选择${comment}"
                      :render-after-expand="false"
                    />
                </ElFormItem>
            </ElCol>
          #elseif($column.htmlType == "input")
            <ElCol :span="12">
                <ElFormItem label="${comment}" prop="${field}">
                #if($column.columnType == 'int')
                    <ElInputNumber
                      v-model="form.${field}"
                      style="width: 100%"
                      :min="1"
                      controls-position="right"
                    />
                #else
                    <ElInput v-model="form.${field}" placeholder="请输入${comment}"></ElInput>
                #end
                </ElFormItem>
            </ElCol>
          #elseif($column.htmlType == "imageUpload")
              <ElCol :span="12">
                <ElFormItem label="${comment}" prop="${field}">
                  <image-upload v-model="form.${field}"/>
                </ElFormItem>
              </ElCol>
          #elseif($column.htmlType == "fileUpload")
          <ElCol :span="12">
            <ElFormItem label="${comment}" prop="${field}">
              <file-upload v-model="form.${field}"/>
            </ElFormItem>
          </ElCol>
          #elseif($column.htmlType == "editor")
          <ElCol :span="24">
              <ElFormItem label="${comment}" prop="${field}">
                <ArtWangEditor
                  v-model="form.${field}"
                  height="400px"
                  placeholder="请输入内容"
                  :exclude-keys="['video']"
                />
              </ElFormItem>
          </ElCol>
          #elseif($column.htmlType == "select" && "" != $dictType)
          <ElCol :span="12">
              <ElFormItem label="${comment}" prop="${field}">
                <ElSelect v-model="form.${field}" placeholder="请选择${comment}">
                  <ElOption
                    v-for="dict in dict.${dictType}"
                    :key="dict.value"
                    :label="dict.label"
          #if($column.javaType == "Integer" || $column.javaType == "Long")
                    :value="parseInt(dict.value)"
          #else
                    :value="dict.value"
          #end
                  ></ElOption>
                </ElSelect>
              </ElFormItem>
          </ElCol>
          #elseif($column.htmlType == "select" && $dictType)
          <ElCol :span="12">
              <ElFormItem label="${comment}" prop="${field}">
                <ElSelect v-model="form.${field}" placeholder="请选择${comment}">
                  <ElOption label="请选择字典生成" value="" />
                </ElSelect>
              </ElFormItem>
          </ElCol>
          #elseif($column.htmlType == "checkbox" && "" != $dictType)
          <ElCol :span="12">
              <ElFormItem label="${comment}" prop="${field}">
                <ElCheckboxGroup v-model="form.${field}">
                  <ElCheckbox
                    v-for="dict in dict.${dictType}"
                    :key="dict.value"
                    :label="dict.value">
                    {{dict.label}}
                  </ElCheckbox>
                </ElCheckboxGroup>
              </ElFormItem>
          </ElCol>
          #elseif($column.htmlType == "checkbox" && $dictType)
          <ElCol :span="12">
              <ElFormItem label="${comment}" prop="${field}">
                <ElCheckboxGroup v-model="form.${field}">
                  <ElCheckbox>请选择字典生成</ElCheckbox>
                </ElCheckboxGroup>
              </ElFormItem>
          </ElCol>
          #elseif($column.htmlType == "radio" && "" != $dictType)
                <ElCol :span="12">
                  <ElFormItem label="${comment}" prop="${field}">
                    <ElRadioGroup v-model="form.${field}">
                      <ElRadio
                        v-for="dict in dict.${dictType}"
                        :key="dict.value"
          #if($column.javaType == "Integer" || $column.javaType == "Long")
                        :value="parseInt(dict.value)"
          #else
                        :value="dict.value"
          #end
                      >{{dict.label}}</ElRadio>
                    </ElRadioGroup>
                  </ElFormItem>
                </ElCol>
          #elseif($column.htmlType == "radio" && $dictType)
                <ElCol :span="12">
                  <ElFormItem label="${comment}" prop="${field}">
                    <ElRadioGroup v-model="form.${field}">
                      <ElRadio value="1">请选择字典生成</ElRadio>
                    </ElRadioGroup>
                  </ElFormItem>
                </ElCol>
          #elseif($column.htmlType == "datetime")
                <ElCol :span="12">
                  <ElFormItem label="${comment}" prop="${field}">
                    <ElDatePicker clearable
                      v-model="form.${field}"
                      type="date"
                      value-format="YYYY-MM-DD"
                      placeholder="选择${comment}">
                    </ElDatePicker>
                  </ElFormItem>
                </ElCol>
          #elseif($column.htmlType == "textarea")
                <ElCol :span="24">
                  <ElFormItem label="${comment}" prop="${field}">
                    <ElInput v-model="form.${field}" type="textarea" placeholder="请输入内容" />
                  </ElFormItem>
                </ElCol>
          #end
          #end
          #end
          #end
          </ElRow>
        </ElForm>
        <template #footer>
          <span class="dialog-footer">
            <ElButton @click="dialogVisible = false">取 消</ElButton>
            <ElButton type="primary" @click="submitForm()">确 定</ElButton>
          </span>
        </template>
      </ElDialog>
    </ElCard>
  </div>
</template>

<script setup lang="ts">
import { type ${BusinessName}, ${BusinessName}Service } from '@/api/${moduleName}/${businessName}'
import type { FormInstance, FormRules, TreeData } from 'element-plus'
import { ElMessage, ElMessageBox } from 'element-plus'
import { useTableColumns } from '@/composables/useTableColumns'
import { useAuth } from '@/composables/useAuth'
import { SearchFormItem } from '@/types'
import { handleTree, parseTime, addDateRange } from '@/utils'
import ArtButtonTable from '@/components/core/forms/art-button-table/index.vue'
#if(${dicts} != '')
import useDict from '@/composables/useDict'
import ArtDict from '@/components/core/forms/art-dict/index.vue'
#end

defineOptions({ name: '${BusinessName}' })

const { hasAuth } = useAuth()
#if(${dicts} != '')
// 字典
const { dict } = useDict([${dicts}])
#end
const { list${BusinessName}, add${BusinessName}, update${BusinessName}, get${BusinessName}, del${BusinessName} } = ${BusinessName}Service

const loading = ref(false)
const initialSearchState = {
  ## 先统计符合条件的字段数量
  #set($betweenColumns = [])
  #foreach ($column in $columns)
      #if($column.query && $column.htmlType == "datetime" && $column.queryType == "BETWEEN")
          #set($void = $betweenColumns.add($column))
      #end
  #end
  ## 根据数量来生成
  #if($betweenColumns.size() == 1)
  daterange: [],
  #else
  #foreach ($column in $betweenColumns)
  #set($AttrName = $column.javaField.substring(0,1).toUpperCase() + $column.javaField.substring(1))
  daterange${AttrName}: [],
  #end
  #end
  #foreach ($column in $columns)
  #if($column.query)
  #if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
  #else
  $column.javaField: undefined#if($foreach.count != $columns.size()),#end
  #end
  #end
  #end
}
const formFilters = reactive({ ...initialSearchState })

const handleReset = () => {
  Object.assign(formFilters, { ...initialSearchState })
  handleSearch()
}

const handleRefresh = () => handleSearch()

// 搜索项配置
const formItems: SearchFormItem[] = [
  #foreach($column in $columns)
  #if($column.query)
  #set($dictType=$column.dictType)
  #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
  #set($parentheseIndex=$column.columnComment.indexOf("（"))
  #if($parentheseIndex != -1)
  #set($comment=$column.columnComment.substring(0, $parentheseIndex))
  #else
  #set($comment=$column.columnComment)
  #end
  #if($column.htmlType == "input")
       {
         label: '${comment}',
         prop: '${column.javaField}',
         type: 'input',
         config: { clearable: true }
       }#if($foreach.count != $columns.size()),#end
  #elseif(($column.htmlType == "select" || $column.htmlType == "radio") && "" != $dictType)
       {
         label: '${comment}',
         prop: '${column.javaField}',
         type: 'select',
         config: { clearable: true },
         options: dict.${dictType}
       }#if($foreach.count != $columns.size()),#end
  #elseif(($column.htmlType == "select" || $column.htmlType == "radio") && $dictType)
      {
         label: '${comment}',
         prop: '${column.javaField}',
         type: 'select',
         config: { clearable: true },
         options: [label:'请选择字典生产',value:'']
      }#if($foreach.count != $columns.size()),#end
  #elseif($column.htmlType == "datetime" && $column.queryType != "BETWEEN")
      {
         label: '${comment}',
         prop: '${column.javaField}',
         type: 'date',
         config: { clearable: true },
      }#if($foreach.count != $columns.size()),#end
  #elseif($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
      {
         label: '${comment}',
         #if($betweenColumns.size() == 1)
         prop: 'daterange',
         #else
         prop: 'daterange${AttrName}',
         #end
         type: 'daterange',
         config: {type: 'daterange',startPlaceholder: '开始时间',endPlaceholder: '结束时间'}
       }#if($foreach.count != $columns.size()),#end
  #end
  #end
  #end
]

// 列表项配置
const { columnChecks, columns } = useTableColumns(() => [
  #foreach($column in $columns)
  #set($javaField=$column.javaField)
  #set($parentheseIndex=$column.columnComment.indexOf("（"))
  #if($parentheseIndex != -1)
  #set($comment=$column.columnComment.substring(0, $parentheseIndex))
  #else
  #set($comment=$column.columnComment)
  #end
  #if($column.pk)
  #elseif($column.list && ("" != $column.dictType || $column.htmlType == "imageUpload" ||  $column.htmlType == "datetime"))
        { label: '${comment}', prop: '${javaField}',align: 'center',useSlot: true },
  #elseif($column.list && "" != $javaField)
  #if(${foreach.index} == 1)
        { label: '${comment}', prop: '${javaField}' },
  #else
        { label: '${comment}', prop: '${javaField}',align: 'center' },
  #end
  #end
  #end
  {
    prop: 'operation',
    label: '操作',
    width: 180,
    formatter: (row: ${BusinessName}) => {
      return h('div', [
        hasAuth('${permissionPrefix}:add') && h(ArtButtonTable, { type: 'add', onClick: () => handleAdd(row) }),
        hasAuth('${permissionPrefix}:edit') && h(ArtButtonTable, { type: 'edit', onClick: () => handleUpdate(row) }),
        hasAuth('${permissionPrefix}:delete') && h(ArtButtonTable, { type: 'delete', onClick: () => deleteRow(row) })
      ])
    }
  }
])

const tableData = ref<${BusinessName}[]>([])
const ${businessName}Options = ref<TreeData>([])

// 搜索
const handleSearch = async () => {
  loading.value = true
  try {
    #set($AttrNames='')
    #foreach ($column in $columns)
    #if($column.query && $column.htmlType == "datetime" && $column.queryType == "BETWEEN")
    #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
       #if($AttrNames == '')
         #set($AttrNames="'${AttrName}'")
       #else
         #set($AttrNames="${AttrNames},'${AttrName}'")
       #end
    #end
    #end
    #if($AttrNames == '')
    const { data } = await list${BusinessName}(formFilters)
    #elseif($AttrNames.split(',').size() == 1)
    const queryParams = addDateRange(formFilters)
    const { data } = await list${BusinessName}(queryParams as any)
    #else
    const queryParams = addDateRange(formFilters, [${AttrNames}])
    const { data } = await list${BusinessName}(queryParams as any)
    #end
    tableData.value = handleTree(data, { id: '${pkColumn.javaField}' })
  } finally {
    loading.value = false
  }
}

// 表单项配置
const dialogVisible = ref(false)
const isEdit = ref(false)
const form = reactive<Partial<${BusinessName}>>({})
const formRef = ref<FormInstance>()
const dialogTitle = computed(() => isEdit.value ? '编辑${functionName}' : '新增${functionName}')

const rules = reactive<FormRules>({
#foreach ($column in $columns)
#if($column.required)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
    $column.javaField: [
      { required: true, message: "$comment不能为空", trigger: #if($column.htmlType == "select" || $column.htmlType == "radio")"change"#else"blur"#end }
    ]#if($foreach.count != $columns.size()),#end
#end
#end
})

/**
* 表单提交
*/
const submitForm = async () => {
  if (!formRef.value) return
  await formRef.value.validate(async (valid) => {
    if (valid) {
      try {
        if (!isEdit.value) {
          await add${BusinessName}(form as ${BusinessName})
        } else {
          await update${BusinessName}(form as ${BusinessName})
        }
         ElMessage.success((isEdit.value ? '编辑' : '新增') + '成功')
        handleSearch()
        dialogVisible.value = false
      } catch {
      //
      }
    }
  })
}

/**
* 新增操作
*/
const handleAdd = async (row?: ${BusinessName}) => {
  resetForm()
  await getTreeSelect()
  form.${treeParentCode} = row ? row.${treeCode} : 0
  dialogVisible.value = true
}

/**
* 修改操作
*/
const handleUpdate = async (row: ${BusinessName}) => {
  resetForm()
  await getTreeSelect()
  isEdit.value = true
  const { data } = await get${BusinessName}(row.${pkColumn.javaField})
  Object.assign(form, {
  #foreach ($column in $columns)
  #if($column.javaField == 'createBy' || $column.javaField == 'createTime' || $column.javaField == 'updateBy' || $column.javaField == 'updateTime')
  #elseif($column.htmlType == "checkbox")
      $column.javaField: data.$column.javaField ?? []#if($foreach.count != $columns.size()),#end
  #else
      $column.javaField: data.$column.javaField ?? undefined#if($foreach.count != $columns.size()),#end
  #end
  #end
  })
  dialogVisible.value = true
}

/**
* 删除操作
*/
const deleteRow = async (row: ${BusinessName}) => {
  try {
    await ElMessageBox.confirm('确定要删除所选项吗？', '提示', { type: 'warning' })
    await del${BusinessName}(row.${pkColumn.javaField})
    ElMessage.success('删除成功')
    handleSearch()
  } catch {
    //
  }
}

/**
* 查询菜单树形
*/
const getTreeSelect = async () => {
    try {
      ${businessName}Options.value = []
      const { data } = await list${BusinessName}({})
      const ${businessName}: Partial<${BusinessName}> = { ${treeCode}: 0, ${treeName}: '主类目', children: [] }
      ${businessName}.children = handleTree(data, { id: '${treeCode}' })
      ${businessName}Options.value.push(${businessName})
    } catch {
      //
    }
}

/**
* 重置表单
*/
const resetForm = () => {
  formRef.value?.resetFields()
  Object.assign(form, {
    #foreach ($column in $columns)
    #if($column.javaField == 'createBy' || $column.javaField == 'createTime' || $column.javaField == 'updateBy' || $column.javaField == 'updateTime')
    #elseif($column.htmlType == "checkbox")
        $column.javaField: []#if($foreach.count != $columns.size()),#end
    #else
        $column.javaField: undefined#if($foreach.count != $columns.size()),#end
    #end
    #end
  })
}

const isExpanded = ref(false)
const tableRef = ref()
// 展开/折叠
const toggleExpand = () => {
  isExpanded.value = !isExpanded.value
  nextTick(() => {
    if (tableRef.value && tableData.value) {
      const processRows = (rows: ${BusinessName}[]) => {
        rows.forEach((row) => {
          if (row.children?.length) {
            tableRef.value.elTableRef.toggleRowExpansion(row, isExpanded.value)
            processRows(row.children)
          }
        })
      }
      processRows(tableData.value)
    }
  })
}

onMounted(() => {
    handleSearch()
})
</script>

<style scoped lang="scss">
.${businessName}-page {
  :deep(.small-btn) {
    height: 30px !important;
    padding: 0 10px !important;
    font-size: 12px !important;
  }
}
</style>
